#!/usr/bin/perl

# Copyright 2002-2013, Paul Johnson (paul@pjcj.net)

# This software is free.  It is licensed under the same terms as Perl itself.

# The latest version of this software should be available from my homepage:
# http://www.pjcj.net

require 5.6.1;

use strict;
use warnings;

# VERSION

use lib qw( ./lib );
use Pod::Usage;
use Devel::Cover::DB;
use Devel::Cover::Dumper;
use Devel::Cover::cpancover::Defaults qw(
    %defaults
    get_options
);
use Devel::Cover::cpancover::Template::Provider;
use Devel::Cover::cpancover;

use Getopt::Long;
use Template 2.00;

$|++;

my $Options = get_options(\%defaults);

print "$0 version " . __PACKAGE__->VERSION . "\n" and exit 0
    if $Options->{version};
pod2usage(-exitval => 0, -verbose => 0)  if $Options->{help};
pod2usage(-exitval => 0, -verbose => 2)  if $Options->{info};

my $self = Devel::Cover::cpancover->new($Options);

$self->run_cover();

my $Template = Template->new( {
    LOAD_TEMPLATES =>
    [
        Devel::Cover::cpancover::Template::Provider->new({}),
    ],
} );

my $vars = $self->prepare_coverage_data();
$self->write_html($vars, $Template);
$self->write_csv($vars);
	
print "\nDone.\n" unless $self->{silent};

__END__

=head1 NAME

cpancover - report coverage statistics on CPAN modules

=head1 SYNOPSIS

    cpancover -help -info -version

=head1 DESCRIPTION

F<cpancover> is a program for gathering and displaying test coverage
statistics on multiple directories ("distribution directories") underneath a
common top-level directory.  The program assumes that each distribution
directory contains subdirectories and files in a format appropriate and
typical for uploading to the Comprehensive Perl Archive Network (CPAN).

(Currently, the presence of a file called F<Makefile.PL> in a distribution
directory is used as a proxy for CPAN-readiness.   This may change in a future
release.)

The program changes into each distribution directory, creates a Makefile,
builds the library, tests the library with flags for coverage analysis turned
on, then calls F<cover> to generate coverage statistics in HTML format for
each distribution in turn.  When each distribution has been analyzed an
overall summary page is generated in HTML, as is a file in CSV format.

Example: The directory tree starting at F<~/tmp> is suitable for F<cpancover>
and will perform coverage analysis on List-Compare and :

    ~/tmp/List-Compare-0.37/
                           /Makefile.PL
                           /lib/List/Compare.pm
                           /t/test.t
    ~/tmp/TAP-Harness-Multiple-0.07/
                           /Makefile.PL
                           /lib/TAP/Harness/Archive/MultipleHarnesses.pm
                           /t/test.t

As is the case when using F<cover> on a single distribution, F<cpancover>'s
statistics can then be used to identify places where additional tests need to
be written and to identify unreachable and potentially removable locations in
the source code.

=head1 OPTIONS

The following command line options are supported:

    -h -help                - show help
    -i -info                - show documentation
    -v -version             - show version
    -collect                - run 'cover' on modules; default is 'on'
    -directory              - directory under which to search for modules
                              needing coverage analysis
    -force                  - force re-rebuild and re-test of module even if
                              'cover' has already been run
    -module                 - ???
    -outputdir              - directory into which overall coverage report
                              will be placed; defaults to value of 'directory'
                              option or current directory
    -outputfile             - name of overall summary file; defaults to
                              'coverage.html'
    -redo_cpancover_html    - defaults to 'off'
    -redo_html              - defaults to 'off'
    -report                 - type of output generated; defaults to
                              'html_basic'
    -stylesheet             - absolute path to user-provided stylesheet (.css)
    -silent                 - suppress logging output

=head1 REQUIREMENTS

The modules L<Template> and L<Parallel::Iterator> are required.

=head1 EXIT STATUS

The following exit values are returned:

0   All operations were completed successfully.

>0  An error occurred.

=head1 SEE ALSO

 L<Devel::Cover>

=head1 BUGS

=head1 LICENCE

Copyright 2002-2013, Paul Johnson (paul@pjcj.net)

This software is free.  It is licensed under the same terms as Perl itself.

The latest version of this software should be available from my homepage:
http://www.pjcj.net

=cut

__END__
# use Carp; $SIG{__DIE__} = \&Carp::confess;
